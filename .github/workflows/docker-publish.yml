name: Build and Publish Docker Images

on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
  push:
    tags:
      - v[0-9]+.*
    branches:
      - feat/docker
  release:
    types:
      - published

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  packages: write

jobs:
  build-and-publish:
    runs-on: ubuntu-latest

    strategy:
      # Prevent a failure in one image from stopping the other builds
      fail-fast: false

      matrix:
        platform: [linux/amd64, linux/arm64]
        os: [alpine, debian]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set OS Suffix
        id: os-suffix
        run: |
          if [ ${{ matrix.os }} = "alpine" ]; then
            echo "::set-output name=dockerfile-suffix::.alpine"
            echo "::set-output name=dockerimage-suffix::-alpine"
          else
            echo "::set-output name=dockerfile-suffix::"
            echo "::set-output name=dockerimage-suffix::"
          fi

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          # list of Docker images to use as base name for tags
          images: |
            ghcr.io/${{ github.repository_owner }}/speetest-rust
          # generate Docker tags based on the following events/attributes
          tags: |
            # Tag with branch name
            type=ref,event=branch,suffix=${{ steps.os-suffix.outputs.dockerimage-suffix }}
            # Tag with pr-number
            type=ref,event=pr,suffix=${{ steps.os-suffix.outputs.dockerimage-suffix }}
            # Tag with git tag on release
            type=ref,event=tag,suffix=${{ steps.os-suffix.outputs.dockerimage-suffix }}
            type=raw,value=release,enable=${{ github.event_name == 'release' }},suffix=${{ steps.os-suffix.outputs.dockerimage-suffix }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3.2.0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.6.1

      - name: Login to GHCR
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push image
        uses: docker/build-push-action@v6.9.0
        with:
          context: .
          # Dockerfile for debian and Dockerfile.alpine for alpine
          file: Dockerfile${{ steps.os-suffix.outputs.dockerfile-suffix }}
          platforms: ${{ matrix.platforms }}
           # Skip pushing when PR from a fork
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
